const appService = {
  'c7ncd.appService.title': 'Application Service',
  'c7ncd.appService.searchAppService': 'Search',
  'c7ncd.appService.permissionManage': 'Authority Management',
  'c7ncd.appService.importAppService': 'Import',
  'c7ncd.appService.createAppService': 'Create',
  'c7ncd.appService.Modify': 'Modify',
  'c7ncd.appService.Details': 'Details',
  'c7ncd.appService.ModifyExternal': 'Modify External Repository Configuration',
  'c7ncd.appService.UpdateAt': 'Update at',
  'c7ncd.appService.CreateAt': 'Create at',
  'c7ncd.appService.ServiceVersion': 'Service Version',
  'c7ncd.appService.SharingSetting': 'Sharing Setting',
  'c7ncd.appService.Search': 'Search',
  'c7ncd.appService.SelectAll': 'Select All',
  'c7ncd.appService.InvertSelection': 'Invert Selection',
  'c7ncd.appService.Delete': 'Delete',
  'c7ncd.appService.AddSharingRule': 'Add sharing rule',
  'c7ncd.appService.tipOne': '1. Services of Built-In Repository will be shared: source Code, Docker image and Chart package',
  'c7ncd.appService.tipTwo': '2. Services of External Repository will be shared: Docker image and Chart package',
  'c7ncd.appService.ShareSearch': 'Search',
  'c7ncd.appService.Scope': 'Scope',
  'c7ncd.appService.VersionType': 'Version Type',
  'c7ncd.appService.normal': 'Normal Service',
  'c7ncd.appService.test': 'Test Service',
  'c7ncd.appService.cancel': 'Cancel',
  'c7ncd.appService.Add': 'Add',
  'c7ncd.appService.Name': 'Name',
  'c7ncd.appService.Save': 'Save',
  'c7ncd.appService.failed': 'Failed',
  'c7ncd.appService.active': 'Enable',
  'c7ncd.appService.unready': 'Disable',
  'c7ncd.appService.operating': 'Operating',
  'c7ncd.appService.outGitlab.alert.tips.attention': 'Note：',
  'c7ncd.appService.outGitlab.alert.tips.one': '1、choose external code repository to create application services, will not be able to use code management, code base management and other functions. Other functions such as service sharing, pipelining, and deployment blocks are available',
  'c7ncd.appService.outGitlab.alert.tips.two': '2. Please ensure that the external GitLab version is V11.0.0 or above',
  'c7ncd.appService.outGitlab.alert.tips.three': '3. Please ensure that the service code is consistent with the external GitLab project code.',
  'c7ncd.appService.outGitlab.alert.tips.four': '4. If you want to use the "upload Chart to Choerodon" task in the pipeline, please ensure that the subdirectory name under Chart directory and the name attribute value in chart.yaml file are service codes',
  'c7ncd.appService.Warehouse': 'Warehouse configuration',
  'c7ncd.appService.cannotstop.des': 'The application service has pipeline resources and cannot be stopped.',
  'c7ncd.appService.stop': 'Stop Service"{name}"',
  'c7ncd.appService.stop.tips': 'Are you sure you want to disable the application service？',
  'c7ncd.appService.create': 'Create Application Service',
  'c7ncd.appService.type': 'Service type',
  'c7ncd.appService.type.normal': 'Normal service',
  'c7ncd.appService.type.test': 'Test services',
  'c7ncd.appService.code': 'Service code',
  'c7ncd.appService.name': 'Service name',
  'c7ncd.appService.code.registry': 'Code warehouse',
  'c7ncd.appService.code.registry.buildin': 'Built-in GitLab warehouse',
  'c7ncd.appService.code.registry.External': 'External GitLab warehouse',
  'c7ncd.appService.template': 'Service template',
  'c7ncd.appService.template.source': 'Template source',
  'c7ncd.appService.source.project': 'Project Application Service',
  'c7ncd.appService.source.organization': 'Shared application',
  'c7ncd.appService.template.organization': 'Organization layer template',
  'c7ncd.appService.template.site': 'Platform layer template',
  'c7ncd.appService.template.name': 'Template name',
  'c7ncd.appService.gitLabRepositoryUrl': 'GitLab warehouse address',
  'c7ncd.appService.approve.setting': 'Authentication configuration',
  'c7ncd.appService.Usernameandpassword': 'User name and password',
  'c7ncd.appService.Usernameandpassword.content': 'Enter a minimum user name and password for the Maintainer role in the warehouse',
  'c7ncd.appService.PrivateToken': 'Private Token',
  'c7ncd.appService.PrivateToken.content': 'Use at least Maintainer roles to create Access tokens with API permissions in GitLab',
  'c7ncd.appService.username': 'User name',
  'c7ncd.appService.userPassword': 'Password',
  'c7ncd.appService.Testlink': 'Test link',
  'c7ncd.appService.token': 'Private Token',
  'c7ncd.appService.gitLabRepositoryUrl.tips': 'Here you need to enter the warehouse address you already have in private GitLab; You can enter the HTTP or HTTPS address.',
  'empty.tips.app-list.des.owner': 'There is no application service under the current project,',
  'empty.pleaseCreate': 'please create',
  'c7ncd.appService.detail': 'Service Detail',
  'repository.head': 'Code warehouse',
  'c7ncd.appService.share.rule.add': 'Adding a Share Rule',
  'c7ncd.appService.version.type': 'Version Type',
  'c7ncd.appService.version.specific': 'Specific Version',
  'c7ncd.appService.share.range': 'Shared Scope',
  'c7ncd.appService.project.all': 'All Project Of The Organization',
  'c7ncd.appService.approve.setting.tips': 'After you select the user name and password, enter the user name and password of the Owner role of the warehouse. If you enter a Token, you need to create an Access Token with API permission in GitLab as the Owner.',
  'c7ncd.appService.userName': 'User Name',
  deployment: 'Deployment',
  'c7ncd.appService.cannot.stop': 'Can Not Stop',
};

export { appService };
